<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thoughts</title>
    <link>/post/</link>
    <description>Recent content in Posts on Thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-UK</language>
    <copyright>Copyright © 2019, Jeremiah Succeed; all rights reserved.</copyright>
    <lastBuildDate>Sat, 04 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Minimalist Plot Design</title>
      <link>/post/minimalist-plot-design/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/minimalist-plot-design/</guid>
      <description>library(ggplot2) source(&amp;quot;/Users/benjamin/Documents/R/ggplot_themes.R&amp;quot;) setwd(&amp;quot;/Users/benjamin/Documents/R/Experiments/ggplot-Labels&amp;quot;) data &amp;lt;- read.csv(&amp;quot;supreme_court_vacancies.csv&amp;quot;, col.names=c(&amp;quot;year&amp;quot;, &amp;quot;wait&amp;quot;)) str(data) ## &amp;#39;data.frame&amp;#39;: 103 obs. of 2 variables: ## $ year: int 1845 1792 1793 1795 1795 1795 1799 1800 1801 1803 ... ## $ wait: int 841 152 43 103 70 4 37 141 180 98 ... # We only want every other tick labelled xlabs &amp;lt;- seq(1780, 2020, by = 10) #S et out the full set of X-labels xlabs[seq(2,24,by=2)] &amp;lt;- &amp;quot;&amp;quot; # Blank out every other label, starting from the 2nd one # Insert caption caption &amp;lt;- &amp;quot;Note: Vacancies are counted as the number of days between a justice&amp;#39;s death, retirement or resignation and the successor justice&amp;#39;s swearing in (or commissioning in the case of a recess appointment) as a member of the court.</description>
    </item>
    
    <item>
      <title>Model Selection</title>
      <link>/post/model-selection/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/model-selection/</guid>
      <description>First post (hopefully I get the file links right). I“ll be walking through the following worked example: https://medium.com/@peter.nistrup/model-selection-101-using-r-c8437b5f9f99
1. Create a base-model using all available variables and data The objective here is to develop a model that predicts female employment status based on citizenship status, availability of government support, and demogrpahic characteristics.
  Variable Description    employed Employment Status (y/n)  foreigner Foreigner (y/n)  gov.support Amount of Government entitled support (log-transformed)  age Age  education Years of Schooling (continuous)  young.</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>/post/first-post/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/first-post/</guid>
      <description>Alright! This is my third attempt at starting a blog - hopefully with the proper documentation and better understanding of hugo/git I get it right this time. Still a couple of imaging tweaks and links to social media that need to be updated, but time to get the learning started!
Trial R Code Snippet summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>